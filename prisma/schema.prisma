// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String           @id @default(cuid())
  firstName     String
  lastName      String
  username      String           @unique
  description   String?
  email         String
  password      String
  image         String?
  emailVerified DateTime?
  location      String?
  group         Group[]
  groups        GroupUser[]
  invitations   InvitationList[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, username])
}

model verificationToken {
  id     String   @id @default(cuid())
  email  String
  token  String   @unique
  expire DateTime

  @@unique([email, token])
}

model Group {
  id             String           @id @default(cuid())
  name           String           @unique
  description    String?
  location       String?
  postalCode     Int[]
  image          String?
  moderatorId    String
  groupType      GroupType        @default(open)
  sportPraticed  SportPracticed[] @default([])
  createdAt      DateTime         @default(now())
  users          GroupUser[]
  invitationList InvitationList[]

  user User @relation(fields: [moderatorId], references: [id])
}

model InvitationList {
  userId  String
  groupId String

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([userId, groupId])
}

model GroupUser {
  userId   String
  groupId  String
  joinedAt DateTime @default(now())
  role     Role     @default(member)
  user     User     @relation(fields: [userId], references: [id])
  group    Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([userId, groupId])
}

enum Role {
  admin
  member
}

enum SportPracticed {
  road_running
  trail_running
  walking
  road_cycling
  gravel_cycling
  mountain_biking
}

enum GroupType {
  close
  open
  invitation
}
